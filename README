
## LangPacks

TODO: Add spec and guide on what langpacks exist

Any LangPack that adheres to the LangPack spec can be served as an algorithm via a LangServer

## Building LangServer(s)

Disclaimer: The intent was to prototype langserver in rust (because I knew it better), but finally write it in go (lower barrier to entry), but it turned into an official project before the rewrite happened. So, for now: start by installing [latest stable rust](https://www.rust-lang.org/downloads.html), and then:

```
cargo build --release
docker build -t algorithmia/langserver .
```

Then the container for individual containers can be built

```
docker build -t algorithmia/langserver-ruby ruby-2.x
```

## Running LangServer

In production: bind mount algorithm.zip into `/algorithmia`

```
docker run --rm -it -v /path/to/algorithm.zip:/algorithmia/ -p 3000:3000 algorithmia/langserver-<lang>
```

In runner/algorithm development: bind mount algorithm dir into `/algorithm` (not `/algorithmia`)

```
docker run --rm -it -v `pwd`:/algorithm -p 3000:3000 algorithmia/langserver-<lang>
```


